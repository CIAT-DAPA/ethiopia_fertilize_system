
# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
   include:
    - devops



stages:

  - stage: BuildCondaEnv
    displayName: Build Conda Env

    jobs:
      - job: pre_build_setup
        displayName: Pre Build Setup
        pool:
          vmImage: ubuntu-latest
        steps:
          - bash: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add conda to PATH

      - job: build_environment
        displayName: Build Environment
        dependsOn: pre_build_setup
        steps:
        - bash: conda create --yes --quiet --name fertalizer python=3.9
          displayName: Create Anaconda environment
        - script: conda env list
          displayName:  environment installation verification
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              eval "$(conda shell.bash hook)"
              conda activate fertalizer
          displayName: Active

  - stage: mongodb
    displayName: Install MongoDb
    dependsOn: BuildCondaEnv

    jobs:
      - job: init_mongodb
        displayName: Init MongoDb
        services:
          mongodb:
            image: mongo:5.0.6
            command: ["mongod", "--dbpath=/dbdata"]
            environment:
              - MONGO_INITDB_ROOT_USERNAME=root
              - MONGO_INITDB_ROOT_PASSWORD=test
            ports:
              - 5000
            volumes:
              - dbdata:/dbdata

        
          steps:

          - volumes:
            dbdata:
              driver: azure_file
              driver_opts:
                share_name: mongodb-data
                storage_account_name: kpncoqyuxumoetuftz

        

  - stage: InstallDependencies
    displayName: Install dependencies
    dependsOn: BuildCondaEnv

    jobs:

      - job: install_dependencies
        displayName: Install Requirements
        steps:

        - script: |
            conda install -c conda-forge gdal=3.4.3 --yes
#            conda install -c conda-forge rasterio=1.2.10 --yes
          displayName: 'Install Gdal'

        - script: |
            sudo apt-get update
            sudo apt-get install libgdal-dev
          displayName: "Install Libgdal"

        - script: |
            sudo add-apt-repository ppa:ubuntugis/ppa
            pip install -U pip
            pip install pyproject-toml
            pip install rasterio
          displayName: "Install Rasterio"

        - script: |
            pip install -r ./src/webapi/requirements.txt
          displayName: 'Install dependencies'

  - stage: RunTest
    displayName: Run Test
    dependsOn: InstallDependencies
    jobs:
      - job: run_test
        displayName: Run Test
        steps:

        - script: python -m unittest discover -s ./src/webapi/unit_tests/ -p 'test_*.py'
          displayName: 'Run Tests'

  - stage: Deploy
    dependsOn: RunTest
    displayName: 'Deploy Proyect'
    jobs:
      - job: Deploy
        displayName: Deploy python

        steps:
        - script: nohup python3 ./src/webapi/agroadvisory_api.py > log.txt 2>&1 &



